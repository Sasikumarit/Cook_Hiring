{"version":3,"file":"static/js/620.52c28269.chunk.js","mappings":"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","sources":["views/components/Admin/AddApplicant.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport * as React from \"react\";\r\nimport CustomDataGrid from \"../CustomDataGrid/CustomDataGrid\";\r\nimport Axios from \"axios\";\r\nimport { Roles } from \"../../util/Utils\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport {toast} from 'react-toastify'\r\n\r\nconst AddApplicant = ({user,handleGridEditButton}) => {\r\n  \r\n  const [state, setState] = React.useState({\r\n     columns:[\r\n    { field: \"sno\", headerName: \"S.No\", width: 90 },\r\n    {\r\n      field: \"jobseekername\",\r\n      headerName: \"Name of Candidates\",\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"location\",\r\n      headerName: \"Location\",\r\n      type: \"number\",\r\n      width: 110,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"mobileno\",\r\n      headerName: \"Mobile Number\",\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email Address\",\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"yearofxp\",\r\n      headerName: \"Year(s) of Experience\",\r\n      width: 110,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: \"username\",\r\n      headerName: \"User\",\r\n      width: 110,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"jobdescription\",\r\n      headerName: \"Job Description\",\r\n      width: 110,\r\n      editable: false,\r\n      \r\n    },\r\n    {\r\n      field: \"Edit\",\r\n      width: 110,\r\n      headerName: \"\",\r\n      renderCell: (cellValues) => {\r\n        return (\r\n            <Button variant=\"outlined\" startIcon={<EditIcon />} onClick={()=>handleGridEditButton('ApplicationForm',cellValues?.row)}>\r\n              Edit\r\n            </Button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      width: 110,\r\n      headerName: \"\",\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(event) => {\r\n              handleGridDeleteButton(cellValues?.row)\r\n            }}\r\n            startIcon={<DeleteIcon />}\r\n            fullWidth={true}\r\n          >\r\n            Delete\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ] , rows: [] });\r\n\r\n  const config = {\r\n    headers:{\r\n        Authorization: user?.token,\r\n    }\r\n  };\r\n\r\n \r\nasync function handleGridDeleteButton(data){\r\n  let choice = window.confirm(\r\n    `Are you sure you want to delete ${data.jobseekername}'s record?`\r\n  );\r\n  if(choice){\r\n  await Axios.delete(process.env.REACT_APP_ServerHost + `jobseeker/${data?.id}`, config).then((res) => {\r\n      if (res.status === 200) {\r\n          toast.success(\"Applicant Successfully Deleted.\", {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n      }\r\n      else{\r\n          toast.error(\"Failed to delete.\", {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n      }\r\n      return res;\r\n    });\r\n  }\r\n}\r\n\r\n  React.useEffect(() => {\r\n    async function fetch() {\r\n      await Axios.get(process.env.REACT_APP_ServerHost + `${user?.userrole.toLowerCase() === Roles.Admin.toLowerCase()?'jobseeker/findAllAppliedCandidate/1':'jobs/findAppliedUser/'+ user.id}`,config).then((res) => {\r\n        if (res.status === 200) {\r\n          setState({...state, rows: res.data.response });\r\n          return res.data.response;\r\n        }\r\n        return res;\r\n      });\r\n    }\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"95%\" }}>\r\n      <CustomDataGrid columns={state.columns} rows={state.rows} user={user} isAddButton={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddApplicant;\r\n"],"names":["user","handleGridEditButton","React","columns","field","headerName","width","editable","type","renderCell","cellValues","variant","startIcon","onClick","row","color","event","handleGridDeleteButton","fullWidth","rows","state","setState","config","headers","Authorization","token","data","window","confirm","jobseekername","Axios","process","id","then","res","status","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","userrole","toLowerCase","Roles","response","fetch","style","isAddButton"],"sourceRoot":""}